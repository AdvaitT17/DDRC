name: Build and deploy Node.js app to Azure Web App - ddrc

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read # Required for actions/checkout

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'
          cache-dependency-path: package-lock.json # Fixed: Ensures correct path

      - name: Install dependencies
        run: npm install

      - name: Build application (if applicable)
        run: npm run build --if-present

      - name: Run tests (if applicable)
        run: npm test --if-present

      - name: Prepare artifact for deployment
        run: |
          mkdir -p wwwroot
          mv * wwwroot/ || true
          zip -r release.zip wwwroot/

      - name: Upload artifact for deployment
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Unzip artifact
        run: unzip release.zip

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_486D83FE9D484EF197E94E699D51CD7B }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_8DE0D946B8684378A5368E463E548593 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_F22AC0134BF34BC7BB9182148A6A47BB }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'ddrc'
          slot-name: 'Production'
          package: wwwroot/
