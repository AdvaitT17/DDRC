# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - ddrc

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Install dependencies
        run: |
          cd server
          npm install
          cd ..

      - name: Prepare deployment structure
        run: |
          # Create deployment directory with the structure Azure expects
          mkdir -p deployment
          
          # Copy server files (excluding node_modules to avoid size issues)
          mkdir -p deployment/server
          cp -r server/config deployment/server/
          cp -r server/middleware deployment/server/
          cp -r server/routes deployment/server/
          cp -r server/scripts deployment/server/
          cp -r server/services deployment/server/
          cp -r server/utils deployment/server/
          cp server/server.js deployment/
          cp server/package.json deployment/
          cp server/package-lock.json deployment/ 2>/dev/null || :
          
          # Copy public directory to root level where Azure expects it
          cp -r public deployment/
          
          # Copy any other necessary files
          cp README.md deployment/ 2>/dev/null || :
          
          # Create a startup script that Azure will use
          echo "#!/bin/bash" > deployment/startup.sh
          echo "cd /home/site" >> deployment/startup.sh
          echo "npm install" >> deployment/startup.sh
          echo "node server.js" >> deployment/startup.sh
          chmod +x deployment/startup.sh
          
          # Create a web.config file for Azure
          cat > deployment/web.config << 'EOL'
          <?xml version="1.0" encoding="utf-8"?>
          <configuration>
            <system.webServer>
              <handlers>
                <add name="iisnode" path="server.js" verb="*" modules="iisnode"/>
              </handlers>
              <rewrite>
                <rules>
                  <rule name="NodeInspector" patternSyntax="ECMAScript" stopProcessing="true">
                    <match url="^server.js\/debug[\/]?" />
                  </rule>
                  <rule name="StaticContent">
                    <action type="Rewrite" url="public{REQUEST_URI}"/>
                  </rule>
                  <rule name="DynamicContent">
                    <conditions>
                      <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="True"/>
                    </conditions>
                    <action type="Rewrite" url="server.js"/>
                  </rule>
                </rules>
              </rewrite>
              <security>
                <requestFiltering>
                  <hiddenSegments>
                    <remove segment="bin"/>
                  </hiddenSegments>
                </requestFiltering>
              </security>
              <httpErrors existingResponse="PassThrough" />
            </system.webServer>
          </configuration>
          EOL

      - name: Zip artifact for deployment
        run: |
          cd deployment
          zip -r ../release.zip ./*

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Unzip artifact for deployment
        run: unzip release.zip
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_5D151C7368624A2BA02DA12C591D5E0D }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_372F13A1954945AEAE3A9EF9F48AC763 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_AADFC2A08B394A799450523069F2F441 }}

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'ddrc'
          slot-name: 'Production'
          package: .
